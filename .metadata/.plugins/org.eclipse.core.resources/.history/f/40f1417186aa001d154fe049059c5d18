package main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

public class Ship extends GameObject{

	public double rudderLocation = 0; //-100 full left, +100 full right
	
	public Ship(Point3D location) {
		super(location);
	}

	public void tick() {
		
	}
	
	public void turn() {
		applyTurnDrag();
		//Game.clamp(radialAcceleration, radialAcceleration, maxRadialAcceleration);
		radialVelocity += radialAcceleration;
		//Game.clamp(radialVelocity, radialVelocity, maxRadialVelocity);
		directionInRadians += radialVelocity;
	}
	
	public void applyStraightLineDrag() {
		double drag = Math.pow(velocity.magnitude(), 2) * .05;
		incrementAccelerationAtAngle(-drag, directionInRadians);
	}
	
	public void applyTurnDrag() {
		double drag = Math.pow(radialVelocity, 2) * .05;
		
		System.out.println("Drag is: " + drag);
		if(radialVelocity >= 0)
			radialAcceleration -= drag;
		else
			radialAcceleration += drag;
	}
	
	//adds accelerationIncrement to current heading
	public void incrementAccelerationAtAngle(double increment, double angle) {
		acceleration.addToXComponent(accelerationIncrement * Math.cos(angle));
		acceleration.addToYComponent(accelerationIncrement * Math.sin(angle));
		
		acceleration.clamp(maxAcceleration);
	}
	public void render(Graphics g) {
		Graphics2D g2d = (Graphics2D)g;
		
		g2d.rotate(directionInRadians, getCenterX(), getCenterY());
		g.setColor(Color.black);
		g.fillRect((int)getX(), (int)getY(), (int)getWidth(), (int)getHeight());
		g2d.rotate(-directionInRadians, getCenterX(), getCenterY());
	}

}
